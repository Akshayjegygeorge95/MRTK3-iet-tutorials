%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: CanvasButton-3
  m_EditorClassIdentifier: 
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: 924a84932d9375047805dcb805321459, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: Add a Canvas Button
      Text:
        m_Untranslated: "Now that you\u2019ve selected a sea animal to live in the
          aquarium, we\u2019ll need a way to toggle the visibility of the sea animal.
          Although you\u2019re welcome to let the sea animal continuously swim while
          you\u2019re designing and arranging the objects in its habitat, it\u2019s
          great to have the flexibility to disable the sea animal if needed. We will
          create a canvas-based toggleable button to achieve this functionality.\n\nCanvas-based
          buttons are flexible and configurable and can be resized to any dimension
          or proportion. The <b>PressableButton</b> script is added as a component
          of the button which includes behaviors specific to the buttons. For this
          tutorial, we\u2019ll use the <b>ActionButton</b> prefab as our base for
          creating a button with a toggle switch. The <b>ActionButton</b> prefab
          is a simple button that includes an icon, text, and a label. These individual
          components can be enabled or disabled, and the layout system will adapt
          accordingly. As for the toggle switch, we provide a <b>ToggleSwitch</b>
          prefab that can be leveraged for adding a toggle switch to the button.\n\nMRTK3
          uses what is referred to as <b>volumetric UI</b>. <b>Volumetric UI</b>
          supports all XR interactions and can be authored in a <b>Canvas-RectTransform</b>
          context. Controls can be automatically laid out with proper margin, padding,
          responsive flex, and all features a designer would expect to find. When
          you setup the <b>Canvas</b> GameObject, you\u2019ll need to ensure that
          it\u2019s <b>Render Mode</b> is set to <b>World Space</b> and its <b>Scale</b>
          is set globally to <b>0.001</b> on all axes.\n\nCanvas prefabs (such as
          the <b>Action Button</b>) must be placed inside a canvas. Let\u2019s create
          a new <b>Canvas</b> GameObject and add the <b>Action Button</b> prefab
          as a child GameObject.\n"
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 1
      Title:
        m_Untranslated: <u>Instructions</u>
      Text:
        m_Untranslated: "<b>1.</b> In the <b>Hierarchy</b>, click the <b>+</b> button
          and select <b>UI > Canvas</b>. Rename the <b>Canvas</b> GameObject to <b>Sea
          Animal Toggle</b>.\n\n<b>2.</b> In the <b>Hierarchy</b> select the <b>Sea
          Animal Toggle</b> GameObject and navigate to the <b>Canvas</b> component.\n\n<b>3.</b>
          Select the <b>Render Mode</b> drop-down and select <b>World Space</b>.
          \n\n<b>4.</b> Within the <b>Canvas</b> properties, select the circle icon
          for <b>Event Camera</b>.\n\n<b>5.</b> In the <b>Select Camera</b> window,
          switch to the <b>Scene</b> tab and select the <b>Main Camera</b>.\n\n<b>6.</b>
          The <b>Rect Transform</b> component should now be active. Change the <b>Scale</b>
          to <b>0.001</b> on all axes.\n\n<b>7.</b> In the <b>Rect Transfom</b> component,
          change the <b>Position</b> to <b>0.13, 0, 0.8</b>.\n\n<b>8.</b> In the
          <b>Rect Transform</b> component, change the <b>Width</b> and <b>Height</b>
          values to <b>100</b>.\n\n<b>9.</b> In the <b>Rect Transfom</b> component,
          change the <b>Position</b> to <b>0.13, 0, 0.8</b>. \n\n<b>Note</b>: Depending
          on where you've placed the sea animal, you may need to further adjust the
          position of the button so that the button displays to the right of the
          sea animal.\n\n<b>10.</b> In the <b>Project</b> panel, search for the <b>Action
          Button</b> prefab and drag the prefab to become a child of the <b>Sea Animal
          Toggle</b> GameObject. You should now see the Action Button prefab display
          in the middle of the tank.\n"
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 0
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0
    m_Pivot: {x: 0, y: 0, z: 0}
    m_Rotation: {x: 0, y: 0, z: 0, w: 0}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 0
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 0}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: Next
  m_DoneButton: Done
